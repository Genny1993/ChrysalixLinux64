#pragma once
#include <unordered_map>
#include <string>

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Опкоды инструкций
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
enum OP_CODE {
	NOP,
	END,
	SLEEP,
	VAR,
	PRINT,
	FREE,
	LABEL,
	JUMP,
	INPT,
	CHANGE,
	TO,
	CALC,
	NEWTEMP,
	FORGET,
	TCOUNT,
	ISSET,
	TYPEOF,
	COMP,
	LOGIC,
	JIF,
	JIFNOT,
	DLABEL,
	SWAP,
	ARRAY,
	VTOARR,
	PUSHB,
	POPB,
	PUSHF,
	POPF,
	ERASE,
	INSRT,
	CLEAR,
	SIZEARR,
    SLICE,
    MERGE,
    SORT,
    UNIQUE,
    REVERSE,
    EQUAL,
    INNER,
    INALL,
    RINNER,
    RINALL,
    ARRTOMAP,
    INTERS,
    NOTINTERS,
    ARRTOSTR,
    SUM,
    AVG,
    MIN,
    MAX,
    RNGE,
    MEDIAN,
    MODE,
    STDDEV,
    PUSH,
    VTOMAP,
    GETVALS,
    GETKEYS,
    GETINTERF,
    KVINTERS,
    KVNOTINTERS,
    CLEARC,
    TOINTERF,
    UNINTERF,
    INTERFTOMAP,
    RAND,
    T,
    HRT,
    BETWEEN,
    JIFELSE,
    JSWITCH,
    FORMAT,
    TRIGON,
    DEGTORAD,
    RADTODEG,
    VARIANCE,
    CASTCHK,
    FINALIZE,
    CONST,
    ISCONST,
    INSTRUCT,
    E,
    PARSE,
    UNPARSE,
    PE,
    IF,
    FOR,
    BREAK,
    CONTINUE,
    WHILE,
    DOWHILE,
    SWITCH,
    ISCODE,
    SCONST,
    SFINALIZE,
    PLZDONTCRASH,
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Таблица соответствий
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct CTable {
    std::unordered_map<std::wstring, OP_CODE> opCodeMap = {
        {L"NOP", OP_CODE::NOP}, {L"nop", OP_CODE::NOP},
        {L"END", OP_CODE::END}, {L"end", OP_CODE::END},
        {L"SLEEP", OP_CODE::SLEEP}, {L"sleep", OP_CODE::SLEEP},
        {L"VAR", OP_CODE::VAR}, {L"var", OP_CODE::VAR},
        {L"PRINT", OP_CODE::PRINT}, {L"print", OP_CODE::PRINT},
        {L"FREE", OP_CODE::FREE}, {L"free", OP_CODE::FREE},
        {L"LABEL", OP_CODE::LABEL}, {L"label", OP_CODE::LABEL},
        {L"JUMP", OP_CODE::JUMP}, {L"jump", OP_CODE::JUMP},
        {L"INPUT", OP_CODE::INPT}, {L"input", OP_CODE::INPT},
        {L"CHANGE", OP_CODE::CHANGE}, {L"change", OP_CODE::CHANGE},
        {L"TO", OP_CODE::TO}, {L"to", OP_CODE::TO},
        {L"CALC", OP_CODE::CALC}, {L"calc", OP_CODE::CALC},
        {L"NEWTEMP", OP_CODE::NEWTEMP}, {L"newtemp", OP_CODE::NEWTEMP},
        {L"FORGET", OP_CODE::FORGET}, {L"forget", OP_CODE::FORGET},
        {L"TCOUNT", OP_CODE::TCOUNT}, {L"tcount", OP_CODE::TCOUNT},
        {L"ISSET", OP_CODE::ISSET}, {L"isset", OP_CODE::ISSET},
        {L"TYPEOF", OP_CODE::TYPEOF}, {L"typeof", OP_CODE::TYPEOF},
        {L"COMP", OP_CODE::COMP}, {L"comp", OP_CODE::COMP},
        {L"LOGIC", OP_CODE::LOGIC}, {L"logic", OP_CODE::LOGIC},
        {L"JIF", OP_CODE::JIF}, {L"jif", OP_CODE::JIF},
        {L"JIFNOT", OP_CODE::JIFNOT}, {L"jifnot", OP_CODE::JIFNOT},
        {L"DLABEL", OP_CODE::DLABEL}, {L"dlabel", OP_CODE::DLABEL},
        {L"SWAP", OP_CODE::SWAP}, {L"swap", OP_CODE::SWAP},
        {L"ARRAY", OP_CODE::ARRAY}, {L"array", OP_CODE::ARRAY},
        {L"VTOARR", OP_CODE::VTOARR}, {L"vtoarr", OP_CODE::VTOARR},
        {L"PUSHB", OP_CODE::PUSHB}, {L"pushb", OP_CODE::PUSHB},
        {L"POPB", OP_CODE::POPB}, {L"popb", OP_CODE::POPB},
        {L"PUSHF", OP_CODE::PUSHF}, {L"pushf", OP_CODE::PUSHF},
        {L"POPF", OP_CODE::POPF}, {L"popf", OP_CODE::POPF},
        {L"ERASE", OP_CODE::ERASE}, {L"erase", OP_CODE::ERASE},
        {L"INSERT", OP_CODE::INSRT}, {L"insert", OP_CODE::INSRT},
        {L"CLEAR", OP_CODE::CLEAR}, {L"clear", OP_CODE::CLEAR},
        {L"SIZE", OP_CODE::SIZEARR}, {L"size", OP_CODE::SIZEARR},
        {L"SLICE", OP_CODE::SLICE}, {L"slice", OP_CODE::SLICE},
        {L"MERGE", OP_CODE::MERGE}, {L"merge", OP_CODE::MERGE},
        {L"SORT", OP_CODE::SORT}, {L"sort", OP_CODE::SORT},
        {L"UNIQUE", OP_CODE::UNIQUE}, {L"unique", OP_CODE::UNIQUE},
        {L"REVERSE", OP_CODE::REVERSE}, {L"reverse", OP_CODE::REVERSE},
        {L"EQUAL", OP_CODE::EQUAL}, {L"equal", OP_CODE::EQUAL},
        {L"IN", OP_CODE::INNER}, {L"in", OP_CODE::INNER},
        {L"INALL", OP_CODE::INALL}, {L"inall", OP_CODE::INALL},
        {L"RIN", OP_CODE::RINNER}, {L"rin", OP_CODE::RINNER},
        {L"RINALL", OP_CODE::RINALL}, {L"rinall", OP_CODE::RINALL},
        {L"ARRTOMAP", OP_CODE::ARRTOMAP}, {L"arrtomap", OP_CODE::ARRTOMAP},
        {L"INTERS", OP_CODE::INTERS}, {L"inters", OP_CODE::INTERS},
        {L"NOTINTERS", OP_CODE::NOTINTERS}, {L"notinters", OP_CODE::NOTINTERS},
        {L"ARRTOSTR", OP_CODE::ARRTOSTR}, {L"arrtostr", OP_CODE::ARRTOSTR},
        {L"SUM", OP_CODE::SUM}, {L"sum", OP_CODE::SUM},
        {L"AVG", OP_CODE::AVG}, {L"avg", OP_CODE::AVG},
        {L"MIN", OP_CODE::MIN}, {L"min", OP_CODE::MIN},
        {L"MAX", OP_CODE::MAX}, {L"max", OP_CODE::MAX},
        {L"RANGE", OP_CODE::RNGE}, {L"range", OP_CODE::RNGE},
        {L"MEDIAN", OP_CODE::MEDIAN}, {L"median", OP_CODE::MEDIAN},
        {L"MODE", OP_CODE::MODE}, {L"mode", OP_CODE::MODE},
        {L"STDDEV", OP_CODE::STDDEV}, {L"stddev", OP_CODE::STDDEV},
        {L"PUSH", OP_CODE::PUSH}, {L"push", OP_CODE::PUSH},
        {L"VTOMAP", OP_CODE::VTOMAP}, {L"vtomap", OP_CODE::VTOMAP},
        {L"GETVALS", OP_CODE::GETVALS}, {L"getvals", OP_CODE::GETVALS},
        {L"GETKEYS", OP_CODE::GETKEYS}, {L"getkeys", OP_CODE::GETKEYS},
        {L"GETINTERF", OP_CODE::GETINTERF}, {L"getinterf", OP_CODE::GETINTERF},
        {L"KVINTERS", OP_CODE::KVINTERS}, {L"kvinters", OP_CODE::KVINTERS},
        {L"KVNOTINTERS", OP_CODE::KVNOTINTERS}, {L"kvnotinters", OP_CODE::KVNOTINTERS},
        {L"CLEARC", OP_CODE::CLEARC}, {L"clearc", OP_CODE::CLEARC},
        {L"TOINTERF", OP_CODE::TOINTERF}, {L"tointerf", OP_CODE::TOINTERF},
        {L"UNINTERF", OP_CODE::UNINTERF}, {L"uninterf", OP_CODE::UNINTERF},
        {L"INTERFTOMAP", OP_CODE::INTERFTOMAP}, {L"interftomap", OP_CODE::INTERFTOMAP},
        {L"RAND", OP_CODE::RAND}, {L"rand", OP_CODE::RAND},
        {L"T", OP_CODE::T}, {L"t", OP_CODE::T},
        {L"HRT", OP_CODE::HRT}, {L"hrt", OP_CODE::HRT},
        {L"BETWEEN", OP_CODE::BETWEEN}, {L"between", OP_CODE::BETWEEN},
        {L"JIFELSE", OP_CODE::JIFELSE}, {L"jifelse", OP_CODE::JIFELSE},
        {L"JSWITCH", OP_CODE::JSWITCH}, {L"jswitch", OP_CODE::JSWITCH},
        {L"FORMAT", OP_CODE::FORMAT}, {L"format", OP_CODE::FORMAT},
        {L"TRIGON", OP_CODE::TRIGON}, {L"trigon", OP_CODE::TRIGON},
        {L"DEGTORAD", OP_CODE::DEGTORAD}, {L"degtorad", OP_CODE::DEGTORAD},
        {L"RADTODEG", OP_CODE::RADTODEG}, {L"radtodeg", OP_CODE::RADTODEG},
        {L"VARIANCE", OP_CODE::VARIANCE}, {L"variance", OP_CODE::VARIANCE},
        {L"CASTCHK", OP_CODE::CASTCHK}, {L"castchk", OP_CODE::CASTCHK},
        {L"FINALIZE", OP_CODE::FINALIZE}, {L"finalize", OP_CODE::FINALIZE},
        {L"CONST", OP_CODE::CONST}, {L"const", OP_CODE::CONST},
        {L"ISCONST", OP_CODE::ISCONST}, {L"isconst", OP_CODE::ISCONST},
        {L"INST", OP_CODE::INSTRUCT}, {L"inst", OP_CODE::INSTRUCT},
        {L"E", OP_CODE::E}, {L"e", OP_CODE::E},
        {L"PARSE", OP_CODE::PARSE}, {L"parse", OP_CODE::PARSE},
        {L"UNPARSE", OP_CODE::UNPARSE}, {L"unparse", OP_CODE::UNPARSE},
        {L"PE", OP_CODE::PE}, {L"pe", OP_CODE::PE},
        {L"IF", OP_CODE::IF}, {L"if", OP_CODE::IF},
        {L"FOR", OP_CODE::FOR}, {L"for", OP_CODE::FOR},
        {L"BREAK", OP_CODE::BREAK}, {L"break", OP_CODE::BREAK},
        {L"CONTINUE", OP_CODE::CONTINUE}, {L"continue", OP_CODE::CONTINUE},
        {L"WHILE", OP_CODE::WHILE}, {L"while", OP_CODE::WHILE},
        {L"DOWHILE", OP_CODE::DOWHILE}, {L"dowhile", OP_CODE::DOWHILE},
        {L"SWITCH", OP_CODE::SWITCH}, {L"switch", OP_CODE::SWITCH},
        {L"ISCODE", OP_CODE::ISCODE}, {L"iscode", OP_CODE::ISCODE},
        {L"SCONST", OP_CODE::SCONST}, {L"sconst", OP_CODE::SCONST},
        {L"SFINALIZE", OP_CODE::SFINALIZE}, {L"sfinalize", OP_CODE::SFINALIZE},
        {L"PLZDONTCRASH", OP_CODE::PLZDONTCRASH}, {L"plzdontcrash", OP_CODE::PLZDONTCRASH},
    };
};